{"version":3,"sources":["context/gameContext.tsx","constants.ts","components/Buttons.tsx","components/Icons.tsx","components/Modal.tsx","components/InnerContainer.tsx","components/Main.tsx","context/gameContextProvider.tsx","App.tsx","index.tsx"],"names":["GameContext","createContext","SCENE_RAIN","SCENE_DAY","SCENE_NIGHT","SCENE_DEAD","DEAD","SLEEP","HUNGRY","HATCHING","IDLING","POOPING","CELEBRATING","FEEDING","foxStates","POOPED","getNextHungerTime","clock","Math","floor","random","getNextDieTime","Buttons","gameContext","useContext","className","onClick","startGame","Icons","context","handleUserAction","Modals","clsx","gameState","current","bagClassNames","cleaning","foxClassNames","scene","InnerContainer","Modal","Main","useEffect","interval","setInterval","setGameState","performFoxActions","clearInterval","GameContextProvider","props","initialState","wakeTime","sleepTime","hungryTime","dieTime","poopTime","timeToStartCelebrating","timeToEndCelebrating","React","useState","Provider","value","actionType","includes","feed","children","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aaed31f.chunk.js","sourcesContent":["import React from \"react\";\nimport { createContext } from \"react\";\nimport { GameStateType } from \"../types\";\n\ninterface GameContextType {\n  startGame: () => void;\n  handleUserAction: (actionType: string) => void;\n  setGameState: React.Dispatch<React.SetStateAction<GameStateType>>;\n  gameState: GameStateType;\n  performFoxActions: () => void;\n}\n\nconst GameContext = createContext<GameContextType | null>(null);\n\nexport default GameContext;\n","//types\ntype TimerFunction = (clock: number) => number;\n\nexport const SCENE_RAIN = \"rain\";\nexport const SCENE_DAY = \"day\";\nexport const SCENE_NIGHT = \"night\";\nexport const SCENE_DEAD = \"dead\";\n\n\nexport const ICONS = [\"fish\", \"poop\", \"weather\"];\n//The number of milliseconds in the browser for one tick\nexport const TICK_RATE = 1500;\nexport const RAIN_CHANCE = 0.2;\nexport const DEFAULT_SCENE = SCENE_DAY;\nexport const SCENES =  [SCENE_RAIN, SCENE_DAY, SCENE_NIGHT, SCENE_DEAD];\nexport const DAY_LENGTH = 60;\nexport const NIGHT_LENGTH = 4;\n\nexport const DEAD = \"DEAD\";\nexport const SLEEP = \"SLEEP\";\nexport const HUNGRY = \"HUNGRY\";\nexport const HATCHING = \"HATCHING\";\nexport const IDLING = \"IDLING\";\nexport const POOPING = \"POOPING\";\nexport const POOPED = \"POOPED\";\nexport const CELEBRATING = \"CELEBRATING\";\nexport const FEEDING = \"FEEDING\";\nexport const INIT = \"INIT\";\n\nexport const foxStates: { [key: string]: string } = {\n  IDLING: \"idling\",\n  HATCHING: \"egg\",\n  SLEEP: \"sleep\",\n  CELEBRATING: \"celebrate\",\n  HUNGRY: \"hungry\",\n  FEEDING: \"eating\",\n  DEAD: \"dead\",\n  POOPING: \"pooping\",\n  POOPED: \"pooped\",\n};\n\nexport const getNextHungerTime: TimerFunction = (clock) =>\n  Math.floor(Math.random() * 3) + 5 + clock;\nexport const getNextDieTime: TimerFunction = (clock) =>\n  Math.floor(Math.random() * 2) + 4 + clock;\nexport const getNextPoopTime: TimerFunction = (clock) =>\n  Math.floor(Math.random() * 3) + 3 + clock;\n","import React, { useContext } from \"react\";\n\nimport GameContext from \"../context/gameContext\";\n\nconst Buttons: React.FC = () => {\n  const gameContext = useContext(GameContext);\n\n  return (\n    <div className=\"buttons\">\n      <button className=\"btn left-btn\"></button>\n      <button\n        className=\"btn middle-btn\"\n        onClick={gameContext?.startGame}\n      ></button>\n      <button className=\"btn right-btn\"></button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React, { useContext } from \"react\";\nimport GameContext from \"../context/gameContext\";\n\nconst Icons: React.FC = () => {\n  const context = useContext(GameContext);\n\n  return (\n    <div className=\"icons\">\n      <div\n        className=\"icon fish-icon\"\n        onClick={() => context?.handleUserAction(\"fish\")}\n      ></div>\n      <div\n        className=\"icon poop-icon\"\n        onClick={() => {\n          context?.handleUserAction(\"poop\");\n        }}\n      ></div>\n      <div\n        className=\"icon weather-icon\"\n        onClick={() => context?.handleUserAction(\"weather\")}\n      ></div>\n    </div>\n  );\n};\n\nexport default Icons;\n","import React, { useContext } from \"react\";\nimport clsx from \"clsx\";\n\nimport GameContext from \"../context/gameContext\";\n\nconst Modals: React.FC = () => {\n  const context = useContext(GameContext);\n\n  return (\n    <div className={clsx(\"modal\")}>\n      <div className=\"modal-inner\">\n        {context?.gameState.current === \"INIT\"\n          ? \"Press the middle button to start\"\n          : context?.gameState.current === \"DEAD\"\n          ? \"The Fox is dead :(\"\n          : \"\"}\n      </div>\n    </div>\n  );\n};\n\nexport default Modals;\n","import React, { useContext } from \"react\";\nimport clsx from \"clsx\";\n\nimport GameContext from \"../context/gameContext\";\nimport { foxStates, INIT, POOPING, SCENE_DAY, SCENE_RAIN } from \"../constants\";\nimport Buttons from \"./Buttons\";\nimport Icons from \"./Icons\";\nimport Modal from \"./Modal\";\nimport { GameStateType } from \"../types\";\n\ntype GameClassNameFn = (gameState?: GameStateType) => string;\n\nconst bagClassNames : GameClassNameFn = (gameState) => clsx(gameState?.cleaning && gameState?.current === \"POOPED\" ? \"poop-bag\" : \"\")\n\nconst foxClassNames : GameClassNameFn = (gameState) => clsx('fox', `fox-${foxStates[gameState?.current || \"\"]}`, {\n  'hidden': gameState?.current === INIT,\n  'fox-pooped': gameState?.current === POOPING,\n  'fox-rain': gameState?.scene === SCENE_RAIN\n})\n\nconst gameClassNames : GameClassNameFn = (gameState) => clsx('game', gameState?.scene || SCENE_DAY)\n\nconst InnerContainer = () => {\n  const context = useContext(GameContext);\n\n  return (\n    <div className=\"inner\">\n      <div className={gameClassNames(context?.gameState)}></div>\n      <div className={foxClassNames(context?.gameState)}></div>\n      <div className={bagClassNames(context?.gameState)}></div>\n      <div className=\"foreground-rain\"></div>\n      <div className=\"frame\"></div>\n      <Modal />\n      <Buttons />\n      <Icons />\n    </div>\n  );\n};\n\nexport default InnerContainer;\n","import React, { useEffect, useContext } from \"react\";\n\nimport GameContext from \"../context/gameContext\";\nimport { TICK_RATE } from \"../constants\";\nimport InnerContainer from \"./InnerContainer\";\n\nconst Main: React.FC = () => {\n  const context = useContext(GameContext);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      context?.setGameState({\n        ...context.gameState,\n        clock: context.gameState.clock + 1,\n      });\n      context?.performFoxActions();\n    }, TICK_RATE);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  return (\n    <div className=\"container\">\n      <InnerContainer />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nimport {\n  getNextHungerTime,\n  getNextDieTime,\n  DEAD,\n  NIGHT_LENGTH,\n  DAY_LENGTH,\n  RAIN_CHANCE,\n  getNextPoopTime,\n  HATCHING,\n  IDLING,\n  CELEBRATING,\n  POOPING,\n  HUNGRY,\n  FEEDING,\n  SLEEP,\n  SCENE_RAIN,\n  SCENE_DAY,\n  SCENE_NIGHT,\n  SCENE_DEAD,\n  POOPED,\n} from \"../constants\";\nimport { GameStateType } from \"../types\";\nimport GameContext from \"./gameContext\";\n\ninterface GameContextProviderProps {\n  children: React.ReactNode;\n}\n\nconst GameContextProvider: React.FC<GameContextProviderProps> = (props) => {\n  const initialState = {\n    current: \"INIT\",\n    clock: 1,\n    wakeTime: -1,\n    sleepTime: -1,\n    hungryTime: -1,\n    dieTime: -1,\n    poopTime: -1,\n    timeToStartCelebrating: -1,\n    timeToEndCelebrating: -1,\n    cleaning: false,\n    scene: SCENE_DAY,\n  };\n\n  const [gameState, setGameState] = React.useState<GameStateType>(initialState);\n\n  const startGame = () => {\n    setGameState({\n      ...initialState,\n      current: HATCHING,\n      wakeTime: initialState.clock + 3,\n      scene: SCENE_DAY,\n    });\n  };\n\n  const wake = () => {\n    setGameState({\n      ...gameState,\n      current: IDLING,\n      wakeTime: -1,\n      sleepTime: gameState.clock + DAY_LENGTH,\n      hungryTime: getNextHungerTime(gameState.clock),\n      scene: Math.random() > RAIN_CHANCE ? SCENE_DAY : SCENE_RAIN,\n    });\n  };\n\n  const changeWeather = () => {\n    setGameState({\n      ...gameState,\n      scene: gameState.scene === SCENE_RAIN ? SCENE_DAY : gameState.scene === SCENE_DAY ? SCENE_RAIN : SCENE_RAIN,\n    });\n  };\n\n  const startCelebrating = () => {\n    setGameState({\n      ...gameState,\n      current: CELEBRATING,\n      timeToStartCelebrating: -1,\n      timeToEndCelebrating: gameState.clock + 2,\n      cleaning: false\n    });\n  };\n\n  const endCelebrating = () => {\n    setGameState({ ...gameState, current: IDLING, timeToEndCelebrating: -1 });\n  };\n\n  const cleanUpPoop = () => {\n    setGameState({\n      ...gameState,\n      dieTime: -1,\n      timeToStartCelebrating: gameState.clock + 2,\n      hungryTime: getNextHungerTime(gameState.clock),\n      current: POOPED,\n      cleaning: true\n    });\n  };\n\n  const poop = () => {\n    setGameState({\n      ...gameState,\n      current: POOPING,\n      poopTime: -1,\n      dieTime: getNextDieTime(gameState.clock),\n    });\n  };\n\n  const feed = () => {\n    // can only feed when hungry\n    if (gameState.current !== HUNGRY) {\n      return;\n    }\n    setGameState({\n      ...gameState,\n      current: FEEDING,\n      dieTime: -1,\n      poopTime: getNextPoopTime(gameState.clock),\n      timeToStartCelebrating: gameState.clock + 2,\n    });\n  };\n\n  const die = () => {\n    setGameState({\n      ...gameState,\n      current: DEAD,\n      scene: SCENE_DEAD,\n      sleepTime: -1,\n      hungryTime: -1,\n      dieTime: -1,\n      poopTime: -1,\n      timeToStartCelebrating: -1,\n      timeToEndCelebrating: -1,\n    });\n  };\n\n  const getHungry = () => {\n    setGameState({\n      ...gameState,\n      current: HUNGRY,\n      dieTime: getNextDieTime(gameState.clock),\n      hungryTime: -1,\n    });\n  };\n\n  const sleep = () => {\n    setGameState({\n      ...gameState,\n      scene: SCENE_NIGHT,\n      current: SLEEP,\n      wakeTime: gameState.clock + NIGHT_LENGTH,\n      sleepTime: -1,\n      hungryTime: -1,\n      dieTime: -1,\n      poopTime: -1,\n      timeToStartCelebrating: -1,\n      timeToEndCelebrating: -1,\n    });\n  };\n\n  const handleUserAction = (actionType: string) => {\n    // can't do actions while in these states\n    if ([SLEEP, FEEDING, CELEBRATING, HATCHING].includes(gameState.current)) {\n      // do nothing\n      return;\n    }\n\n    if (gameState.current === \"INIT\" || gameState.current === DEAD) {\n      startGame();\n      return;\n    }\n\n    // execute the currently selected action\n    switch (actionType) {\n      case \"weather\":\n        changeWeather();\n        break;\n      case \"poop\":\n        cleanUpPoop();\n        break;\n      case \"fish\":\n        feed();\n        break;\n    }\n  };\n\n  const performFoxActions = () => {\n    if (gameState.clock === gameState.wakeTime) {\n      wake();\n    } else if (gameState.clock === gameState.sleepTime) {\n      sleep();\n    } else if (gameState.clock === gameState.hungryTime) {\n      getHungry();\n    } else if (gameState.clock === gameState.timeToStartCelebrating) {\n      startCelebrating();\n    } else if (gameState.clock === gameState.timeToEndCelebrating) {\n      endCelebrating();\n    } else if (gameState.clock === gameState.poopTime) {\n      poop();\n    } else if (gameState.clock === gameState.dieTime) {\n      die();\n    }\n  };\n\n  return (\n    <GameContext.Provider\n      value={{\n        startGame,\n        handleUserAction,\n        setGameState,\n        gameState,\n        performFoxActions,\n      }}\n    >\n      {props.children}\n    </GameContext.Provider>\n  );\n};\n\nexport default GameContextProvider;\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport GameContextProvider from \"./context/gameContextProvider\";\nimport \"./App.css\";\nimport \"./sprites.css\";\n\nfunction App() {\n  return (\n    <div>\n      <GameContextProvider>\n        <Main />\n      </GameContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}